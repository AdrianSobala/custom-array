{"version":3,"sources":["routing/routingService.js","components/ui/input/input.js","components/ui/search/search.js","components/ui/select/select.js","components/ui/searchBar/searchBar.js","components/ui/customArray/customArray.js","components/pages/mainPage/mainPage.js","components/ui/materialUiArray/materialUiArray.js","components/pages/materialUiArrayPage/materialUiArrayPage.js","components/pages/notfoundPage.js","routing/routing.js","components/ui/sideNavigation/sideNavigation.js","components/App.js","reportWebVitals.js","index.js"],"names":["getRoute","name","isRoute","appUrl","process","apiUrl","console","log","Input","props","inputRef","useRef","useState","isActive","setActive","className","error","type","value","numeric","label","htmlFor","id","required","helpTooltip","renderHelpTooltip","afterLabel","renderAfterLabel","ref","children","fontSize","fontWeight","copy","copyOnClick","hidden","onChange","e","val","target","replaceAll","isNaN","onFocus","onBlur","placeholder","disabled","Search","childrenList","filterIn","current","filterBy","i","length","a","dataset","search","toUpperCase","indexOf","filter","style","display","ActiveElement","activeElement","shortName","Option","data","onClick","Select","handleOptionClick","selectedElement","cardOptions","onChangeActiveElement","useEffect","options","map","item","key","currencyOptions","currencyPair","baseCurrency","cardData","onOutsideClick","inputSelect","optionsAlign","SearchBar","listRef","setFilter","filterList","CustomArray","React","forwardRef","CustomArrayHeader","CustomArrayBody","CustomArrayRow","data-search","Object","values","data-filter","category","CustomArrayColumn","index","columnOrder","setColumnOrder","handleChangeColumnOrder","direction","maxLength","data-column","order","showSettings","hideColumn","currentTarget","classList","toggle","bodyRef","childNodes","j","columnData","column","handleHideColumn","changePosition","MainPage","exampleData","unit","amount","desc","mockupData","arratHeader","setArrayHeader","arrayBody","setArrayBody","arrayRef","handleGenerateArrayHeader","headerData","keys","domElements","handleGenerateArrayBody","domRowElements","domColumnsElements","item2","index2","columnType","tableData","newItem","unshift","handleAddNewRow","result","el","o","assign","handleAddNewColumn","createData","calories","fat","carbs","protein","rows","descendingComparator","b","orderBy","getComparator","stableSort","array","comparator","stabilizedThis","sort","headCells","disablePadding","EnhancedTableHead","classes","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","inputProps","headCell","align","sortDirection","TableSortLabel","active","property","event","visuallyHidden","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","Toolbar","clsx","Typography","variant","component","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","EnhancedTable","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","Paper","TableContainer","Table","aria-labelledby","size","aria-label","newSelecteds","n","TableBody","slice","row","isItemSelected","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","FormControlLabel","control","Switch","MaterialUiArrayPage","NotFoundPage","Routing","exact","path","render","SideNavigation","to","activeClassName","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97ff048b.chunk.js","sourcesContent":["const getRoute = (name, isRoute) => {\r\n    const appUrl = `${process.env.PUBLIC_URL}`;\r\n    const apiUrl = `${process.env.REACT_APP_API_MAIN}`;\r\n\r\n    switch (name) {\r\n        case \"api\":\r\n            return apiUrl;\r\n            break;\r\n\r\n        case \"main\":\r\n            return appUrl + \"/\";\r\n            break;\r\n        case \"material\":\r\n            return appUrl + \"/materialuiarray\";\r\n            break;\r\n\r\n        case \"\":\r\n            return appUrl;\r\n            break;\r\n        default:\r\n            console.log(`Route not found`);\r\n    }\r\n\r\n    return appUrl;\r\n};\r\n\r\nexport default getRoute;\r\n","import React, { useRef, useState } from \"react\";\r\nimport \"./input.scss\";\r\n\r\nconst Input = (props) => {\r\n    const inputRef = useRef(null);\r\n\r\n    const [isActive, setActive] = useState(false);\r\n\r\n    const renderHidden = () => {\r\n        if (props.hidden) {\r\n            return <div className={\"hiddenBox\"}>{props.hidden}</div>;\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    const renderAfterLabel = () => {\r\n        if (props.afterLabel) {\r\n            return props.afterLabel;\r\n        }\r\n    };\r\n\r\n    const renderError = () => {\r\n        if (props?.error) {\r\n            return <div className={\"inputError\"}>{props?.error}</div>;\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    const renderHelpTooltip = () => {\r\n        if (props.helpTooltip) {\r\n            return (\r\n                <div className={\"helpTooltip\"}>\r\n                    <span className=\"material-icons\">help</span>\r\n                    <div className={\"helpTooltipText\"}>{props.helpTooltip}</div>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    const handleFocus = () => {\r\n        setActive(true);\r\n        if (typeof props.onFocus === \"function\") {\r\n            props.onFocus();\r\n        }\r\n    };\r\n\r\n    const handleBlur = () => {\r\n        setActive(false);\r\n        if (typeof props.onFocus === \"function\") {\r\n            props.onBlur();\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        if (props.numeric) {\r\n            let val = e.target.value.replaceAll(\",\", \".\");\r\n            val = val.replaceAll(\" \", \"\");\r\n            if (!isNaN(val)) {\r\n                props.onChange(props.id, val);\r\n            }\r\n        } else {\r\n            props.onChange(props.id, e.target.value);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={`kInput \r\n        ${props.className ?? \"\"} \r\n        ${props?.error ? \"error\" : \"\"}\r\n        ${props?.type === \"hidden\" ? \"hidden\" : \"\"}\r\n        ${isActive ? \"active\" : \"\"}\r\n        ${props?.value === \"\" && props.numeric ? \"invalid\" : \"\"}\r\n        `}\r\n        >\r\n            {props.label ? (\r\n                <label htmlFor={props.id}>\r\n                    {props.label}:{\" \"}\r\n                    {props.required ? (\r\n                        <div className={\"isRequired\"}>\r\n                            <span className=\"material-icons\">error</span>\r\n                            <div className={\"isRequiredText\"}>wymagane</div>\r\n                        </div>\r\n                    ) : null}\r\n                    {renderHelpTooltip()}\r\n                </label>\r\n            ) : null}\r\n            {renderAfterLabel()}\r\n            <div className={\"kInputInside\"}>\r\n                <input\r\n                    id={props.id}\r\n                    name={props.id}\r\n                    type={props.type ?? \"text\"}\r\n                    ref={inputRef}\r\n                    className={`\r\n                            ${props.children ? \"hasChildren\" : \"\"} \r\n                            ${props.fontSize ?? \"\"} \r\n                            ${\r\n                                props.fontWeight\r\n                                    ? \"weight\" + props.fontWeight\r\n                                    : \"\"\r\n                            }\r\n                            ${props?.copy ? \"copy\" : \"\"}\r\n                            ${props?.copyOnClick ? \"copyOnClick\" : \"\"}\r\n                            ${props?.hidden ? \"hidden\" : \"\"}\r\n                            `}\r\n                    value={props.value}\r\n                    onChange={handleChange}\r\n                    onFocus={handleFocus}\r\n                    onBlur={handleBlur}\r\n                    placeholder={props?.placeholder}\r\n                    required={props?.required}\r\n                    disabled={props?.disabled}\r\n                />\r\n                {props.children}\r\n\r\n                {renderHidden()}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input;\r\n","import \"./search.scss\";\r\nimport Input from \"../input/input\";\r\n\r\n// <Search\r\n//     filterIn={props.listRef} // Ref wskazuje bezpośredniego rodzica filtrowanych elementów\r\n//     filterBy={props.filter} // objekty z value i name po których będzie filtrować data-filter\r\n//     id={\"searchWallet\"}\r\n//     name={\"searchWallet\"}\r\n//     placeholder={i18next.t(\"Wyszukaj...\")} // Placeholder wyświetlany w inpucie\r\n// />\r\n\r\n// Dodać do bezpośredniego potomka\r\n// data-search={`${props.name},${props.shortName}`}  -- dane po których będzie wyszukiwanie z inputa searchContainer (STRING)\r\n// data-filter={props.type} -- dodatkowe filtrowanie po -- selectedElement (object {value:0,name: filterBy})\r\n//\r\nconst Search = (props) => {\r\n    const onChangeSearch = (e, value) => {\r\n        let childrenList = props.filterIn.current?.children;\r\n        let filterBy = props?.filterBy;\r\n        if (filterBy && childrenList) {\r\n            for (let i = 0; i < childrenList.length; i++) {\r\n                let a = childrenList[i].dataset;\r\n                if (filterBy && filterBy.value != 0) {\r\n                    if (\r\n                        a.search?.toUpperCase().indexOf(value?.toUpperCase()) >\r\n                            -1 &&\r\n                        filterBy.value === a.filter.toUpperCase()\r\n                    ) {\r\n                        childrenList[i].style.display = \"\";\r\n                    } else {\r\n                        childrenList[i].style.display = \"none\";\r\n                    }\r\n                } else {\r\n                    if (\r\n                        a.search?.toUpperCase().indexOf(value.toUpperCase()) >\r\n                        -1\r\n                    ) {\r\n                        childrenList[i].style.display = \"\";\r\n                    } else {\r\n                        childrenList[i].style.display = \"none\";\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"searchContainer\">\r\n            <Input\r\n                id={props.id}\r\n                name={props.id}\r\n                placeholder={props.placeholder ?? \"Wyszukaj...\"}\r\n                onChange={onChangeSearch}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport \"./select.scss\";\r\nimport OutsideClickHandler from \"react-outside-click-handler\";\r\n\r\nconst Select = (props) => {\r\n    const [isActive, setActive] = useState(false);\r\n\r\n    const handleOutsideClick = () => {\r\n        setActive(false);\r\n    };\r\n    const handleSelectedElementClick = () => {\r\n        setActive(!isActive);\r\n        console.log(\"click fired\");\r\n    };\r\n    const handleOptionClick = (selectedElement) => {\r\n        setActive(false);\r\n        if (props.cardOptions?.length > 0) {\r\n            props.onChangeActiveElement(selectedElement);\r\n        } else {\r\n            props.onChangeActiveElement(selectedElement);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (\r\n            props.activeElement === null ||\r\n            typeof props.activeElement === \"undefined\"\r\n        ) {\r\n            handleOptionClick(props.options[0]);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(\"isActive: \", isActive);\r\n    }, [isActive]);\r\n    const options =\r\n        props.options?.map((item, key) => {\r\n            return (\r\n                <Option\r\n                    key={key}\r\n                    value={item.value}\r\n                    onClick={() => handleOptionClick(item)}\r\n                >\r\n                    {item.name}\r\n                </Option>\r\n            );\r\n        }) ??\r\n        props.currencyOptions?.map((item, key) => {\r\n            const value = item.currencyPair?.baseCurrency?.shortName;\r\n\r\n            return (\r\n                <Option\r\n                    className={props.className}\r\n                    key={key}\r\n                    value={value}\r\n                    data={item}\r\n                    onClick={() => handleOptionClick(item)}\r\n                />\r\n            );\r\n        }) ??\r\n        props.cardOptions?.map((item, key) => {\r\n            return (\r\n                <Option\r\n                    key={key}\r\n                    cardData={item}\r\n                    onClick={() => handleOptionClick(item)}\r\n                />\r\n            );\r\n        });\r\n\r\n    return (\r\n        <div className={`kSelect`} id={props?.id}>\r\n            <OutsideClickHandler\r\n                disabled={!isActive}\r\n                onOutsideClick={handleOutsideClick}\r\n            >\r\n                {props.label ? (\r\n                    <div className=\"label\">\r\n                        {props.label}:\r\n                        {props.required ? (\r\n                            <div className={\"isRequired\"}>\r\n                                <div className={\"isRequiredText\"}>wymagane</div>\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n                <div\r\n                    className={`selectedElement ${\r\n                        props.inputSelect ? \"inputSelect\" : \"\"\r\n                    }`}\r\n                    onClick={handleSelectedElementClick}\r\n                >\r\n                    <div className={\"selectedElementInside\"}>\r\n                        <div className={\"selectedElementText\"}>\r\n                            <ActiveElement\r\n                                activeElement={props?.activeElement ?? \"\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {isActive ? (\r\n                    <div\r\n                        className={`\r\n                        optionsList \r\n                        ${props.optionsAlign ?? \"\"} \r\n                        ${props.className ?? \"\"}\r\n                        `}\r\n                    >\r\n                        {options}\r\n                    </div>\r\n                ) : null}\r\n            </OutsideClickHandler>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ActiveElement = (props) => {\r\n    if (typeof props.activeElement === \"object\") {\r\n        if (typeof props.activeElement.shortName !== \"undefined\") {\r\n            return (\r\n                props.activeElement?.shortName ??\r\n                props.activeElement?.name ??\r\n                \"\"\r\n            );\r\n        } else {\r\n            return props.activeElement?.name ?? \"\";\r\n        }\r\n    } else {\r\n        return props.activeElement?.name ?? \"\";\r\n    }\r\n};\r\n\r\nconst Option = (props) => {\r\n    if (typeof props.data === \"undefined\") {\r\n        return (\r\n            <div\r\n                className={\"kOption\"}\r\n                value={props.value}\r\n                onClick={props.onClick}\r\n            >\r\n                {props.children}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Select;\r\n","import Search from \"./../search/search\";\r\nimport Select from \"./../select/select\";\r\n\r\nimport \"./searchBar.scss\";\r\n\r\nconst SearchBar = (props) => {\r\n    // Use it like this:\r\n\r\n    // const listRef = useRef(); // ref wskazuje na kontener w którym są bezpośrednio filtrowane elementy\r\n\r\n    // <SearchBar listRef={listRef} filter={filter} setFilter={setFilter} />;\r\n\r\n    const filterList = (e) => {\r\n        if (props.setFilter) {\r\n            props.setFilter(e);\r\n        }\r\n\r\n        let childrenList = props?.listRef?.current?.children;\r\n\r\n        let filter;\r\n        if (e.value != 0) {\r\n            filter = e.value;\r\n        } else {\r\n            filter = \"\";\r\n        }\r\n        if (childrenList) {\r\n            for (let i = 0; i < childrenList.length; i++) {\r\n                let a = childrenList[i].dataset.filter;\r\n\r\n                if (a?.toUpperCase().indexOf(filter?.toUpperCase()) > -1) {\r\n                    childrenList[i].style.display = \"\";\r\n                } else {\r\n                    childrenList[i].style.display = \"none\";\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"searchBar\">\r\n                <Search\r\n                    filterIn={props.listRef}\r\n                    filterBy={props.filter}\r\n                    id={\"searchWallet\"}\r\n                    name={\"searchWallet\"}\r\n                    placeholder={\"Wyszukaj...\"}\r\n                />\r\n                <p>{\"lub filtruj po\"}</p>\r\n                <div className=\"filterBy\">\r\n                    <Select\r\n                        options={[\r\n                            {\r\n                                value: 0,\r\n                                name: \"Wszystkie\",\r\n                            },\r\n                            {\r\n                                value: \"fruits\",\r\n                                name: \"Owoce\",\r\n                            },\r\n                            {\r\n                                value: \"vegetables\",\r\n                                name: \"Warzywa\",\r\n                            },\r\n                        ]}\r\n                        activeElement={props.filter}\r\n                        onChangeActiveElement={(e) => filterList(e)}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useState } from \"react\";\r\nimport \"./customArray.scss\";\r\n\r\nconst CustomArray = React.forwardRef((props, ref) => {\r\n    return (\r\n        <div className=\"customArray\" ref={ref}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n});\r\nconst CustomArrayHeader = (props) => {\r\n    return <div className=\"customArrayHeader\">{props.children}</div>;\r\n};\r\nconst CustomArrayBody = React.forwardRef((props, ref) => {\r\n    return (\r\n        <div className=\"customArrayBody\" ref={ref}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n});\r\n\r\nconst CustomArrayRow = (props) => {\r\n    return (\r\n        <div\r\n            className={\"customArrayRow\"}\r\n            data-search={props.item ? Object.values(props.item) : \"\"}\r\n            data-filter={props?.item?.category}\r\n        >\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\nconst CustomArrayColumn = React.forwardRef((props, ref) => {\r\n    const [columnOrder, setColumnOrder] = useState(props.index);\r\n\r\n    const handleChangeColumnOrder = (direction, maxLength) => {\r\n        if (direction === \"remove\") {\r\n            if (columnOrder >= 0) {\r\n                setColumnOrder(columnOrder - 1);\r\n            }\r\n        } else {\r\n            if (maxLength < columnOrder) {\r\n                setColumnOrder(columnOrder + 1);\r\n            }\r\n        }\r\n    };\r\n    const handleSetStickyPosition = (e) => {\r\n        e.currentTarget.classList.toggle(\"stickMe\");\r\n    };\r\n\r\n    const handleHideColumn = (e) => {\r\n        e.currentTarget.classList.toggle(\"fav4-eye-slash\");\r\n        e.currentTarget.classList.toggle(\"fav4-eye\");\r\n        let childrenList = props?.bodyRef?.current?.children;\r\n        let filter;\r\n\r\n        filter = props.children;\r\n\r\n        if (childrenList) {\r\n            for (let i = 0; i < childrenList.length; i++) {\r\n                let a = childrenList[i].childNodes;\r\n\r\n                for (let j = 0; j < a.length; j++) {\r\n                    const columnData = a[j].dataset.column;\r\n\r\n                    if (columnData?.toUpperCase() === filter?.toUpperCase()) {\r\n                        // a[j].style.display = \"none\";\r\n                        a[j].classList.toggle(\"hiden\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={\"customArrayColumn\"}\r\n            data-column={props?.type}\r\n            style={{ order: columnOrder }}\r\n        >\r\n            <div className=\"columnContent\">{props.children}</div>\r\n            {props.showSettings ? (\r\n                <div className=\"columnSettings\">\r\n                    {props.hideColumn ? (\r\n                        <span\r\n                            className=\"fas fav4-eye-slash\"\r\n                            onClick={(e) => handleHideColumn(e)}\r\n                        ></span>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n\r\n                    {props.changePosition ? (\r\n                        <div className=\"changePositon\">\r\n                            <span\r\n                                className=\"fas fav4-caret-left\"\r\n                                onClick={() =>\r\n                                    handleChangeColumnOrder(\"remove\")\r\n                                }\r\n                            ></span>\r\n                            <span\r\n                                className=\"fas fav4-caret-right\"\r\n                                onClick={(e) => handleChangeColumnOrder(\"add\")}\r\n                            ></span>\r\n                        </div>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                </div>\r\n            ) : (\r\n                \"\"\r\n            )}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default CustomArray;\r\n\r\nexport {\r\n    CustomArrayRow,\r\n    CustomArrayColumn,\r\n    CustomArrayHeader,\r\n    CustomArrayBody,\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport getRoute from \"../../../routing/routingService\";\r\n\r\nimport \"./mainPage.scss\";\r\n\r\nimport SearchBar from \"./../../ui//searchBar/searchBar\";\r\n\r\nimport CustomArray, {\r\n    CustomArrayHeader,\r\n    CustomArrayBody,\r\n    CustomArrayRow,\r\n    CustomArrayColumn,\r\n} from \"../../ui/customArray/customArray\";\r\n\r\n// -   Dynamiczne dodawanie wierszy\r\n// -   Dynamiczne dodawanie kolumn\r\n// -   Sortowanie po kolumnach (uwzględnić typ string, number i date w formacie ISO)\r\n// -   Dynamiczna paginacja z symulowanym asynchronicznym pobieraniem danych\r\n// -   Dynamiczna zmiana kolejności kolumn (możliwie najprostsze rozwiązanie)\r\n// -   Ukrywanie kolumn\r\n// -   Zasilanie tabeli danymi ze zmockowanego API o dowolnej postaci\r\n// -   Możliwość oznaczania wybranych kolumn jako sticky\r\n\r\nconst MainPage = () => {\r\n    const exampleData = [\r\n        {\r\n            id: 1,\r\n            category: \"fruits\",\r\n            name: \"apple\",\r\n            unit: \"kg\",\r\n            amount: 10,\r\n            desc: \"Antonówka\",\r\n        },\r\n        {\r\n            id: 2,\r\n            category: \"vegetables\",\r\n            name: \"carrot\",\r\n            unit: \"kg\",\r\n            amount: 3,\r\n            desc: \"Odmiana Galicja\",\r\n        },\r\n        {\r\n            id: 3,\r\n            category: \"fruits\",\r\n            name: \"pineapple\",\r\n            unit: \"szt\",\r\n            amount: 1,\r\n            desc: \"\",\r\n        },\r\n        {\r\n            id: 4,\r\n            category: \"fruits\",\r\n            name: \"pear\",\r\n            unit: \"kg\",\r\n            amount: 1,\r\n            desc: \"Faworytka\",\r\n        },\r\n        {\r\n            id: 5,\r\n            category: \"vegetables\",\r\n            name: \"potatoes\",\r\n            unit: \"kg\",\r\n            amount: 32.1,\r\n            desc: \"Michalina\",\r\n        },\r\n        {\r\n            id: 6,\r\n            category: \"fruits\",\r\n            name: \"tomatoes\",\r\n            unit: \"kg\",\r\n            amount: 4,\r\n            desc: \"\",\r\n        },\r\n        {\r\n            id: 7,\r\n            category: \"vegetables\",\r\n            name: \"cucumber\",\r\n            unit: \"kg\",\r\n            amount: 2.5,\r\n            desc: \"\",\r\n        },\r\n        {\r\n            id: 8,\r\n            category: \"fruits\",\r\n            name: \"kiwi\",\r\n            unit: \"szt\",\r\n            amount: 20,\r\n            desc: \"\",\r\n        },\r\n        {\r\n            id: 9,\r\n            category: \"fruits\",\r\n            name: \"orange\",\r\n            unit: \"kg\",\r\n            amount: 3.14,\r\n            desc: \"\",\r\n        },\r\n    ];\r\n\r\n    const [mockupData, setMockupData] = useState(exampleData);\r\n    const [arrayLoader, setArrayLoader] = useState(null);\r\n\r\n    const [arratHeader, setArrayHeader] = useState();\r\n    const [arrayBody, setArrayBody] = useState();\r\n    const [filter, setFilter] = useState({\r\n        value: 0,\r\n        name: \"Wszystkie\",\r\n    });\r\n\r\n    const arrayRef = useRef();\r\n\r\n    const handleGenerateArrayHeader = (data, maxLength) => {\r\n        let headerData = Object.keys(data[0]);\r\n        if (headerData && headerData.length > 0) {\r\n            const domElements = headerData.map((item, index) => {\r\n                if (maxLength) {\r\n                    if (index < maxLength) {\r\n                        return (\r\n                            <CustomArrayColumn\r\n                                item={item}\r\n                                index={index}\r\n                                key={index}\r\n                                hideColumn={true}\r\n                                changePosition={true}\r\n                                showSettings={true}\r\n                                bodyRef={arrayRef}\r\n                            >\r\n                                {item}\r\n                            </CustomArrayColumn>\r\n                        );\r\n                    }\r\n                } else {\r\n                    return (\r\n                        <CustomArrayColumn\r\n                            item={item}\r\n                            index={index}\r\n                            key={index}\r\n                            hideColumn={true}\r\n                            changePosition={true}\r\n                            showSettings={true}\r\n                            bodyRef={arrayRef}\r\n                        >\r\n                            {item}\r\n                        </CustomArrayColumn>\r\n                    );\r\n                }\r\n            });\r\n\r\n            if (domElements) {\r\n                setArrayHeader(<CustomArrayRow>{domElements}</CustomArrayRow>);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleGenerateArrayBody = (data, maxLength) => {\r\n        if (data && data.length > 0) {\r\n            const domRowElements = data.map((item, index) => {\r\n                const domColumnsElements = Object.values(item).map(\r\n                    (item2, index2) => {\r\n                        const columnType = Object.keys(item);\r\n                        if (maxLength) {\r\n                            if (index2 < maxLength) {\r\n                                return (\r\n                                    <CustomArrayColumn\r\n                                        item={item2}\r\n                                        index={index2}\r\n                                        key={index2}\r\n                                        type={columnType[index2]}\r\n                                    >\r\n                                        {item2}\r\n                                    </CustomArrayColumn>\r\n                                );\r\n                            }\r\n                        } else {\r\n                            return (\r\n                                <CustomArrayColumn\r\n                                    item={item2}\r\n                                    index={index2}\r\n                                    key={index2}\r\n                                    type={columnType[index2]}\r\n                                >\r\n                                    {item2}\r\n                                </CustomArrayColumn>\r\n                            );\r\n                        }\r\n                    }\r\n                );\r\n\r\n                return (\r\n                    <CustomArrayRow key={index} item={item}>\r\n                        {domColumnsElements}\r\n                    </CustomArrayRow>\r\n                );\r\n            });\r\n\r\n            if (domRowElements) {\r\n                setArrayBody(domRowElements);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleGetApiData = (cancelToken) => {\r\n        handleGenerateArrayHeader(exampleData);\r\n        handleGenerateArrayBody(exampleData);\r\n        // axios({\r\n        //     method: \"GET\",\r\n        //     url: getRoute(\"api\") + \"/people/\",\r\n        //     withCredentials: false,\r\n        //     cancelToken: cancelToken,\r\n        // })\r\n        //     .then(function (response) {\r\n        //         setMockupData(response.data.results);\r\n        //         handleGenerateArrayHeader(response.data.results, 8);\r\n        //         handleGenerateArrayBody(response.data.results, 8);\r\n        //     })\r\n        //     .catch(function (error) {\r\n        //         console.log(error.response);\r\n        //     });\r\n    };\r\n\r\n    const handleAddNewRow = (data) => {\r\n        let tableData = data;\r\n        let newItem = {};\r\n        for (const key of Object.keys(tableData[0])) {\r\n            newItem[key] = \"empty\";\r\n        }\r\n        tableData.unshift(newItem);\r\n        handleGenerateArrayBody(tableData);\r\n    };\r\n\r\n    const handleAddNewColumn = (data) => {\r\n        let tableData = data;\r\n\r\n        var result = tableData.map(function (el) {\r\n            var o = Object.assign({}, el);\r\n            o.isActive = true;\r\n            return o;\r\n        });\r\n        handleGenerateArrayHeader(result);\r\n        handleGenerateArrayBody(result);\r\n    };\r\n\r\n    useEffect(() => {\r\n        handleGetApiData();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mainPage\">\r\n                <h3>Custom Array</h3>\r\n\r\n                <div className=\"bar\">\r\n                    <button\r\n                        className=\"customButton\"\r\n                        onClick={() => handleAddNewRow(mockupData)}\r\n                    >\r\n                        Dodaj nowy wiersz\r\n                    </button>\r\n                    <button\r\n                        className=\"customButton\"\r\n                        onClick={() => handleAddNewColumn(mockupData)}\r\n                    >\r\n                        Dodaj nową kolumnę\r\n                    </button>\r\n                    <SearchBar\r\n                        listRef={arrayRef}\r\n                        filter={filter}\r\n                        setFilter={setFilter}\r\n                    />\r\n                </div>\r\n\r\n                <CustomArray>\r\n                    <CustomArrayHeader>{arratHeader}</CustomArrayHeader>\r\n                    <CustomArrayBody ref={arrayRef}>\r\n                        {arrayBody}\r\n                    </CustomArrayBody>\r\n                </CustomArray>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n    createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n    createData(\"Donut\", 452, 25.0, 51, 4.9),\r\n    createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n    createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n    createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\r\n    createData(\"Honeycomb\", 408, 3.2, 87, 6.5),\r\n    createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n    createData(\"Jelly Bean\", 375, 0.0, 94, 0.0),\r\n    createData(\"KitKat\", 518, 26.0, 65, 7.0),\r\n    createData(\"Lollipop\", 392, 0.2, 98, 0.0),\r\n    createData(\"Marshmallow\", 318, 0, 81, 2.0),\r\n    createData(\"Nougat\", 360, 19.0, 9, 37.0),\r\n    createData(\"Oreo\", 437, 18.0, 63, 4.0),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === \"desc\"\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n    {\r\n        id: \"name\",\r\n        numeric: false,\r\n        disablePadding: true,\r\n        label: \"Dessert (100g serving)\",\r\n    },\r\n    { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\r\n    { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\r\n    { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\r\n    {\r\n        id: \"protein\",\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: \"Protein (g)\",\r\n    },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const {\r\n        classes,\r\n        onSelectAllClick,\r\n        order,\r\n        orderBy,\r\n        numSelected,\r\n        rowCount,\r\n        onRequestSort,\r\n    } = props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        indeterminate={\r\n                            numSelected > 0 && numSelected < rowCount\r\n                        }\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n                    />\r\n                </TableCell>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? \"right\" : \"left\"}\r\n                        padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : \"asc\"}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                                    {order === \"desc\"\r\n                                        ? \"sorted descending\"\r\n                                        : \"sorted ascending\"}\r\n                                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n        theme.palette.type === \"light\"\r\n            ? {\r\n                  color: theme.palette.secondary.main,\r\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n              }\r\n            : {\r\n                  color: theme.palette.text.primary,\r\n                  backgroundColor: theme.palette.secondary.dark,\r\n              },\r\n    title: {\r\n        flex: \"1 1 100%\",\r\n    },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const { numSelected } = props;\r\n\r\n    return (\r\n        <Toolbar\r\n            className={clsx(classes.root, {\r\n                [classes.highlight]: numSelected > 0,\r\n            })}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography\r\n                    className={classes.title}\r\n                    color=\"inherit\"\r\n                    variant=\"subtitle1\"\r\n                    component=\"div\"\r\n                >\r\n                    {numSelected} selected\r\n                </Typography>\r\n            ) : (\r\n                <Typography\r\n                    className={classes.title}\r\n                    variant=\"h6\"\r\n                    id=\"tableTitle\"\r\n                    component=\"div\"\r\n                >\r\n                    Nutrition\r\n                </Typography>\r\n            )}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n    },\r\n    paper: {\r\n        width: \"100%\",\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: \"rect(0 0 0 0)\",\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: \"hidden\",\r\n        padding: 0,\r\n        position: \"absolute\",\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n    const classes = useStyles();\r\n    const [order, setOrder] = React.useState(\"asc\");\r\n    const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [dense, setDense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === \"asc\";\r\n        setOrder(isAsc ? \"desc\" : \"asc\");\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = rows.map((n) => n.name);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1)\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleChangeDense = (event) => {\r\n        setDense(event.target.checked);\r\n    };\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    const emptyRows =\r\n        rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                <EnhancedTableToolbar numSelected={selected.length} />\r\n                <TableContainer>\r\n                    <Table\r\n                        className={classes.table}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        size={dense ? \"small\" : \"medium\"}\r\n                        aria-label=\"enhanced table\"\r\n                    >\r\n                        <EnhancedTableHead\r\n                            classes={classes}\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={rows.length}\r\n                        />\r\n                        <TableBody>\r\n                            {stableSort(rows, getComparator(order, orderBy))\r\n                                .slice(\r\n                                    page * rowsPerPage,\r\n                                    page * rowsPerPage + rowsPerPage\r\n                                )\r\n                                .map((row, index) => {\r\n                                    const isItemSelected = isSelected(row.name);\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            hover\r\n                                            onClick={(event) =>\r\n                                                handleClick(event, row.name)\r\n                                            }\r\n                                            role=\"checkbox\"\r\n                                            aria-checked={isItemSelected}\r\n                                            tabIndex={-1}\r\n                                            key={row.name}\r\n                                            selected={isItemSelected}\r\n                                        >\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                <Checkbox\r\n                                                    checked={isItemSelected}\r\n                                                    inputProps={{\r\n                                                        \"aria-labelledby\": labelId,\r\n                                                    }}\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell\r\n                                                component=\"th\"\r\n                                                id={labelId}\r\n                                                scope=\"row\"\r\n                                                padding=\"none\"\r\n                                            >\r\n                                                {row.name}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                {row.calories}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                {row.fat}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                {row.carbs}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                {row.protein}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow\r\n                                    style={{\r\n                                        height: (dense ? 33 : 53) * emptyRows,\r\n                                    }}\r\n                                >\r\n                                    <TableCell colSpan={6} />\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n            <FormControlLabel\r\n                control={\r\n                    <Switch checked={dense} onChange={handleChangeDense} />\r\n                }\r\n                label=\"Dense padding\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport MaterialUiArray from \"../../ui/materialUiArray/materialUiArray\";\r\n\r\nconst MaterialUiArrayPage = () => {\r\n    return (\r\n        <>\r\n            <h3>Material UI Array</h3>\r\n            <MaterialUiArray />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MaterialUiArrayPage;\r\n","import React from \"react\";\r\n\r\nconst NotFoundPage = () => {\r\n    return <h3>Page not found</h3>;\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport getRoute from \"./routingService\";\r\n\r\nimport MainPage from \"../components/pages/mainPage/mainPage\";\r\nimport MaterialUiArrayPage from \"../components/pages/materialUiArrayPage/materialUiArrayPage\";\r\nimport NotfoundPage from \"../components/pages/notfoundPage\";\r\n\r\nconst Routing = (props) => {\r\n    return (\r\n        <Switch>\r\n            <Route\r\n                exact\r\n                path={getRoute(\"main\", true)}\r\n                render={(props) => <MainPage {...props} />}\r\n            />\r\n            <Route\r\n                exact\r\n                path={getRoute(\"material\", true)}\r\n                render={(props) => <MaterialUiArrayPage {...props} />}\r\n            />\r\n\r\n            <Route render={(props) => <NotfoundPage {...props} />} />\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default Routing;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport getRoute from \"../../../routing/routingService\";\r\n\r\nimport \"./sideNavigation.scss\";\r\n\r\nconst SideNavigation = () => {\r\n    return (\r\n        <>\r\n            <nav className=\"sideNavigation\">\r\n                <ul>\r\n                    <li>\r\n                        <NavLink\r\n                            className=\"sideNavLink\"\r\n                            to={getRoute(\"main\")}\r\n                            activeClassName=\"active\"\r\n                        >\r\n                            <div className=\"sideNavLinkName\">CustomArray</div>\r\n                        </NavLink>\r\n                    </li>\r\n                    {/* <li>\r\n                        <NavLink\r\n                            className=\"sideNavLink\"\r\n                            to={getRoute(\"material\")}\r\n                            activeClassName=\"active\"\r\n                        >\r\n                            <div className=\"sideNavLinkName\">\r\n                                MaterialUiArray\r\n                            </div>\r\n                        </NavLink>\r\n                    </li> */}\r\n                </ul>\r\n            </nav>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SideNavigation;\r\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Routing from \"../routing/routing\";\n\nimport SideNavigation from \"../components/ui/sideNavigation/sideNavigation\";\n\nimport \"./app.scss\";\nimport \"bootstrap/dist/css/bootstrap-reboot.min.css\";\nimport \"bootstrap/dist/css/bootstrap-grid.min.css\";\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12 col-lg-3\">\n                            <SideNavigation />\n                        </div>\n                        <div className=\"col-12 col-lg-9\">\n                            <Routing />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}